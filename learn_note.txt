工作区：正常文件系统，非git区域
暂存区：stage
分支：最后保存的位置，版本库

git add <file1> <file2> ……  //提交到stage
git commit -m <str>   //向分支提交并注释
git status            //查看递交区和stage状态
git diff HEAD -- readme.txt
  git diff //显示当前工作区的文件和stage区文件的差异
  git diff --staged //显示stage区和HEAD的文件的差异
  git diff HEAD //显示工作区和上次递交文件的差异
git log [--pretty=oneline]  //最近到最远的提交日志

git checkout --<files> //把文件在工作区的修改全部撤销
  还没有被放到暂存区，撤销修改就回到和版本库一模一样的状态；
  已经添加到暂存区后，撤销修改就回到添加到暂存区后的状态。
  "git checkout -- file"命令中的--很重要，没有--，就变成了“切换到另一个分支”的命令
git reset --hard <版本号（HEAD=现在；^=上一个>    //版本回退
git reflog            //操作变动（不包括stage）

init:
git remote add origin git@github.com:shinpoi/git_learn.git
git push -u origin master //-u:关联本地和远程的master分支

git push origin master    //本地的master分支push到origin（远程库的名字）
git clone git@github.com:<id>/<repositories>.git    //git clone +adress

branch:
git checkout -b <branch>  //-b参数表示创建并切换
  git branch <branch>
  git checkout <branch>
git branch  //查看所有分支

git merge <branch>  //合并指定分支到当前分支
git branch -d <branch>    //-d delet
